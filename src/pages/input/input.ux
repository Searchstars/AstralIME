<template>
  <div class="input-page">
    <scroll class="input-area" scroll-y=true>
        <text class="input-text">{{input_text}}</text>
    </scroll>
    <image style="position:absolute; width: 480px; height: 265px; margin-top: 215px; opacity: 0.5" src="/common/ime_default_background_01.png"></image>
    <div class="sec_toggle">
      <text style="width: 100%; height: 100%; text-align: center; color: white; font-size: 18px">123</text>
    </div>
    <scroll class="word_tips" scroll-x="true">
      <text class="word_tip" style="margin-left: 10px">FirstTip</text>
      <text class="word_tip" style="margin-left: 10px">SecondTip</text>
      <text class="word_tip" style="margin-left: 10px">ThirdTip</text>
      <text class="word_tip" style="margin-left: 10px">FourthTip</text>
      <text class="word_tip" style="margin-left: 10px">FivethTip</text>
      <text class="word_tip" style="margin-left: 15px">></text>
      <text class="word_tip" style="margin-left: 10px"></text>
    </scroll>
    <div class="lang_toggle">
      <text style="width: 100%; height: 100%; text-align: center; color: white; font-size: 18px">中/英</text>
    </div>
    <div class="keyboard">
        <div class="key-row">
            <text class="key" @click="TypeWord('q')">Q</text>
            <text class="key" @click="TypeWord('w')">W</text>
            <text class="key" @click="TypeWord('e')">E</text>
            <text class="key" @click="TypeWord('r')">R</text>
            <text class="key" @click="TypeWord('t')">T</text>
            <text class="key" @click="TypeWord('y')">Y</text>
            <text class="key" @click="TypeWord('u')">U</text>
            <text class="key" @click="TypeWord('i')">I</text>
            <text class="key" @click="TypeWord('o')">O</text>
            <text class="key" @click="TypeWord('p')">P</text>
        </div>
        <div class="key-row">
            <text class="key" @click="TypeWord('a')">A</text>
            <text class="key" @click="TypeWord('s')">S</text>
            <text class="key" @click="TypeWord('d')">D</text>
            <text class="key" @click="TypeWord('f')">F</text>
            <text class="key" @click="TypeWord('g')">G</text>
            <text class="key" @click="TypeWord('h')">H</text>
            <text class="key" @click="TypeWord('j')">J</text>
            <text class="key" @click="TypeWord('k')">K</text>
            <text class="key" @click="TypeWord('l')">L</text>
        </div>
        <div class="key-row">
            <text class="key" @click="TypeWord('z')">Z</text>
            <text class="key" @click="TypeWord('x')">X</text>
            <text class="key" @click="TypeWord('c')">C</text>
            <text class="key" @click="TypeWord('v')">V</text>
            <text class="key" @click="TypeWord('b')">B</text>
            <text class="key" @click="TypeWord('n')">N</text>
            <text class="key" @click="TypeWord('m')">M</text>
            <text class="key"><</text>
        </div>
        <div class="feature_btns">
            <text class="space-key">空格 / 语音输入</text>
        </div>
    </div>
  </div>
</template>

<script>
import vibrator from '@system.vibrator'
import file from '@system.file'
export default {
  public:{
    input_text: ""
  },
  private: {
    current_mode: "en", // 当前语言模式 cn/en
    default_dict: [
      {
        "en":{
          "a": ["apple", "ant", "amber"],
          "b": ["banana", "berry", "biscuit"]
        }
      },
      {
        "zh": {
          "ni": ["你","尼", "拟", "妮"],
          "shi": ["是", "时", "事", "市"]
        }
      }
    ],
    TypeWord(word){
      if(!this.$app.$def.emu_mode){
        vibrator.vibrate({
          mode: "short"
        });
      }
      this.input_text += word
      console.log(this.getSuggestions(this.input_text, 3, this.default_dict, "en"))
    },
    getSuggestions(input, numSuggestions, suggestionsJsonArray, language) {
      let suggestions = [];
      for (let i = 0; i < suggestionsJsonArray.length && suggestions.length < numSuggestions; i++) {
        const suggestionsJson = suggestionsJsonArray[i];
        if (suggestionsJson[language] && suggestionsJson[language][input]) {
          // 遍历当前 JSON 对象中的建议
          for (let suggestion of suggestionsJson[language][input]) {
            if (suggestions.length < numSuggestions) {
              suggestions.push(suggestion);
            } else {
              // 如果已达到所需的建议数量，提前终止搜索
              break;
            }
          }
        }
      }
      return suggestions;
    }
  }
}
</script>

<style>
.input-page{
  display: flex;
  background-color: #f0f0f0;
  position: absolute;
}
.input-area{
  position: absolute;
  width: 90%;
  height: 150px;
  margin-top: 40px;
  margin-left: 42.5px;
  border-color: white;
  align-items: flex-start;
}
.input-text{
  width: 100%;
  height: 100%;
  color: white;
  font-size: 22px;
  align-items: flex-start;
  position: absolute;
}
.sec_toggle{
  position: absolute;
  margin-top: 225px;
  margin-left: 20px;
  border-radius: 5px;
  width: 40px;
  height: 30px;
  background-color: #a1a1a12d;
}
.word_tips{
  position: absolute;
  margin-top: 225px;
  margin-left: 70px;
  border-radius: 5px;
  width: 320px;
  height: 30px;
  flex-direction: row;
  background-color: #a1a1a12d;
}
.word_tip{
  color: white;
  font-size: 16px;
}
.lang_toggle{
  position: absolute;
  margin-top: 225px;
  margin-left: 400px;
  border-radius: 5px;
  width: 60px;
  height: 30px;
  background-color: #a1a1a12d;
}
.keyboard {
    display: flex;
    flex-direction: column;
    position: absolute;
    margin-top: 265px;
    width: 100%
}
.key-row {
    display: flex;
    justify-content: center;
    margin: 2px 0;
}
.key, .space-key, .delete-key {
    padding: 10px 4px;
    margin: 0 1px;
    background-color: #a1a1a12d;
    border: none;
    border-radius: 3px;
    font-size: 14px;
    text-align: center;
    min-width: 42px;
    min-height: 50px;
    transition: transform 0.2s cubic-bezier(0.34, 1.56, 0.64, 1);
    color: white
}
.key:active, .space-key:active, .delete-key:active {
    transform: scale(0.9);
}
.space-key {
    width: 30%;
}
.feature_btns{
    flex-grow: 2;
    justify-content: center;
    display: flex;
}
.delete-key {
    position: absolute;
    right: 20px;
    top: 10px;
    background-color: #ff4d4f;
    color: white;
    text-align: center;
}
</style>
